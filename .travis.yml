dist: xenial
language: generic

services:
  - docker

matrix:
  # Lets build be marked complete if all required matrix is finished
  # https://docs.travis-ci.com/user/build-matrix/#fast-finishing
  fast_finish: true

  include:
  # Docker w/ framework
  - os: linux
    env: TYPE="docker"
    sudo: required

  # Conda w/o mantid-framework
  - os: linux
    env: TYPE="conda" CONDA=3.6.7    PKG="mantid-total-scattering-python-wrapper"
    sudo: required

  - os: linux
    env: TYPE="conda" CONDA=3.6.8    PKG="mantid-total-scattering-python-wrapper"
    sudo: required

  - os: linux
    env: TYPE="conda" CONDA=3.6.9    PKG="mantid-total-scattering-python-wrapper"
    sudo: required

  - os: linux
    env: TYPE="conda" CONDA=3.6.10    PKG="mantid-total-scattering-python-wrapper"
    sudo: required

  # Conda w/ mantid-framework
  - os: linux
    env: TYPE="conda" CONDA=3.6.7    PKG="mantid-total-scattering"
    sudo: required

  - os: linux
    env: TYPE="conda" CONDA=3.6.8    PKG="mantid-total-scattering"
    sudo: required

  - os: linux
    env: TYPE="conda" CONDA=3.6.9    PKG="mantid-total-scattering"
    sudo: required

  - os: linux
    env: TYPE="conda" CONDA=3.6.10    PKG="mantid-total-scattering"
    sudo: required

  # Allowed failures
  allow_failures:

    # Conda w/o mantid-framework
    - os: linux
      env: TYPE="conda" CONDA=3.6.8    PKG="mantid-total-scattering-python-wrapper"
      sudo: required

    - os: linux
      env: TYPE="conda" CONDA=3.6.9    PKG="mantid-total-scattering-python-wrapper"
      sudo: required

    - os: linux
      env: TYPE="conda" CONDA=3.6.10    PKG="mantid-total-scattering-python-wrapper"
      sudo: required

    # Conda w/ mantid-framework
    - os: linux
      env: TYPE="conda" CONDA=3.6.8    PKG="mantid-total-scattering"
      sudo: required

    - os: linux
      env: TYPE="conda" CONDA=3.6.9    PKG="mantid-total-scattering"
      sudo: required

    - os: linux
      env: TYPE="conda" CONDA=3.6.10    PKG="mantid-total-scattering"
      sudo: required

before_install:
  - | 
    if [[ "${TYPE}" == "docker" ]]; then
      docker build -t test-env -f .ci/Dockerfile .;
      test_cmd=`./.ci/construct_test_command.sh`;
    fi

  - |
    if [[ "${TYPE}" == "conda" ]]; then
      MINICONDA_URL="https://repo.continuum.io/miniconda";
      MINICONDA_FILE="Miniconda${CONDA:0:1}-latest-Linux-x86_64.sh";
      wget "${MINICONDA_URL}/${MINICONDA_FILE}";
      bash ${MINICONDA_FILE} -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda/bin:$PATH";
      conda init bash;

      sudo apt-get install freeglut3-dev libglu1-mesa;
    fi


install:
  - |
    if [[ "${TYPE}" == "conda" ]]; then
      # Setup conda activate/deactivate commands
      conda init bash
      source $(conda info --root)/etc/profile.d/conda.sh
      conda info --root

      # Conda config - behavior and channel setup
      conda config --set always_yes yes --set changeps1 no --set anaconda_upload no;
      conda config --add channels conda-forge --add channels mantid --add channels mantid/label/nightly;

      # Install mamba
      conda install mamba -c conda-forge
      mamba update mamba -c conda-forge
      mamba info -a

      # BUILD: Create mts build environment
      mamba create -q -n ${PKG}_build python=$CONDA conda-build conda-verify;
      conda activate ${PKG}_build
      PKG_PATH="./conda.recipe/${PKG}"
      mamba build ${PKG_PATH}
      export PKG_FILE=$(conda build ${PKG_PATH} --output)
      conda activate
    fi

script:
  - |
    if [[ "${TYPE}" == "docker" ]]; then
      docker run -t test-env /bin/bash -c "$test_cmd";
      docker run -t test-env /bin/bash -c "flake8 .";
    fi

  - |
    if [[ "${TYPE}" == "conda" ]]; then
      # TEST: Create test environment and test build
      mamba create -q -n ${PKG}_test python=$CONDA conda-build anaconda-client flake8 pytest;
      conda activate ${PKG}_test
      mkdir -p ${CONDA_PREFIX}/conda-bld/linux-64/
      cp ${PKG_FILE} ${CONDA_PREFIX}/conda-bld/linux-64/
      conda index ${CONDA_PREFIX}/conda-bld
      mamba install -c ${CONDA_PREFIX}/conda-bld ${PKG}

      if [[ "${PKG}" == "mantid-total-scattering-python-wrapper" ]]; then
        mamba install mantid-framework -c mantid/label/nightly;
      fi

      flake8 .
      python -c "import mantid"
      python -c "import total_scattering"

      python setup.py test;
    fi

deploy:

 # Deploy pure-python package to PyPI https://pypi.org/project/mantid-total-scattering/
 - provider: pypi
   user: mcdonnellmt
   skip_cleanup: true
   skip_existing: true
   on:
     tags: true
     branch: master
   password:
     secure: kqA6ITb6fr+9Q/KBeU/mxa+d319Uwgc9wi8OPsZssvSneQ8vGAIVSSDBeCVbKSXLjXUIKUWYfndOiqT8wCQU+jpY1TZG0Bm0zWGGxBvcUJEnVrB7siWJ6l+MZ4nPXFFMtwhP0KMDtwen0fLnGOLQlNLyz3qb0Lf8NkM1BumXDK7Lc7p/x8ziKHQothL047jx+0PMsydbTdK2gae/ADm6R4z+ZJirv0/yciUQnCwmiXSnYX5UHtkXqP3k21ZtTV3eA9vNvK1HMEti51lFDrgTt5EBOxtX0UIz6YqfCl5ZHyXMS4uCwqL/m7gRPAc1MTmSurZ4JJkvsaVrU3vUdIimlm2EwqH6+yOfjvWlTdwjglkplt4Z95/rN3CLvYIrYq76XsG2yxY8c11+xmpSMo2/6vbRvmKhmbyV6tFeBgq5rflA/xJkM5WqSyMcE0lhk8xc0RL7aAeblyAs9q/hN9BiZIesegE6pd8DWYEGw6cWnwzaflLgze0nJYE5gQ5z5LZJky8/Nxdxumtf9XVS48PenaNIbDLLG1ER2nufHHg3/5Yv+c0TMRWKv6plb4OLj2AIYa2aSedm7YyVhCbVV0/xM0HxZ8fpKxBMDuFuuU1S1YgQkex7cCfj2QW2JBGoX/iAvPz1sZcU7A+VKaKMJyY+SSmQf+Sz3Px3O8CE+9LerV4=

 # Deploy conda package to Anaconda.org https://anaconda.org/marshallmcdonnell/mantid-total-scattering
 - provider: script
   script: cd conda.recipe && chmod +x anaconda_upload.sh && ./anaconda_upload.sh ${PKG_FILE}
   skip_cleanup: true
   skip_existing: true
   on:
     branch: master
     tags: true
     condition: $TYPE = conda
